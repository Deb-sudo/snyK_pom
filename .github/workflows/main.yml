name: Snyk Scan

on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  snyk:
    name: Snyk Scan for Node.js and Java
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write  # for SARIF upload

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Install Snyk CLI
        run: |
          curl -sL https://github.com/snyk/cli/releases/latest/download/snyk-linux -o snyk
          chmod +x snyk
          sudo mv snyk /usr/local/bin/snyk

      - name: Authenticate Snyk CLI
        env:
          SNYK_TOKEN: a1eb8b76-9f7f-4ff8-8fcb-e951abcdfa23
        run: snyk auth "$SNYK_TOKEN"

      - name: Run Snyk test for package.json (Node.js)
        if: always()
        run: |
          if [ -f "package.json" ]; then
            echo "Detected package.json, running Snyk test for Node.js..."
            snyk test --file=package.json --severity-threshold=high --sarif-file-output=snyk-node.sarif || exit 1
            snyk monitor --file=package.json || true
          else
            echo "No package.json found, skipping Node.js scan."
          fi

      - name: Run Snyk test for pom.xml (Java)
        if: always()
        run: |
          if [ -f "pom.xml" ]; then
            echo "Detected pom.xml, running Snyk test for Java..."
            snyk test --file=pom.xml --severity-threshold=high --sarif-file-output=snyk-java.sarif || exit 1
            snyk monitor --file=pom.xml || true
          else
            echo "No pom.xml found, skipping Java scan."
          fi

      - name: Combine SARIF results
        if: always()
        run: |
          files=()
          [ -f snyk-node.sarif ] && files+=("snyk-node.sarif")
          [ -f snyk-java.sarif ] && files+=("snyk-java.sarif")

          if [ "${#files[@]}" -eq 1 ]; then
            cp "${files[0]}" combined.sarif
          elif [ "${#files[@]}" -gt 1 ]; then
            jq -s '{ version: "2.1.0", runs: map(.runs[]) }' "${files[@]}" > combined.sarif
          fi

      - name: Upload SARIF to GitHub Code Scanning
        if: always() && (hashFiles('combined.sarif') != '')
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: combined.sarif

